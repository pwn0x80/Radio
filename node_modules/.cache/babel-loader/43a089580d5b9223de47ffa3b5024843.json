{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const radioSlice = createSlice({\n  name: \"currentRadioUrl\",\n  initialState: {\n    audio: {\n      name: null,\n      trackName: null,\n      baseUrl: \"\",\n      converPic: \"\",\n      uuid: null,\n      genres: null,\n      currentplayingUrl: null,\n      tag: \"\",\n      color: \"\"\n    },\n    pending: false,\n    error: false\n  },\n  reducers: {\n    updateStart: state => {\n      state.pending = true;\n    },\n    radioBaseUrlUpdateSuccess: (state, action) => {\n      var _action$payload;\n      state.pending = false;\n      state.audio.baseUrl = (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.baseUrl;\n    },\n    updateCurrentPlaying: (state, action) => {\n      state.pending = false;\n      state.audio.trackName = action.payload.trackName;\n      state.audio.converPic = action.payload.coverPic;\n      state.audio.uuid = action.payload.uuid;\n      state.audio.currentplayingUrl = action.payload.currentplayingUrl;\n      state.audio.color = action.payload.color;\n    },\n    radioUpdateGenreSuccess: (state, action) => {\n      state.audio.name = action.payload.name;\n      state.audio.trackName = action.payload.trackName;\n      state.pending = false;\n      state.audio.genres = action.payload.genres;\n    },\n    updateError: state => {\n      state.error = true;\n      state.pending = false;\n    }\n  }\n});\nexport const {\n  updateStart,\n  radioUpdateGenreSuccess,\n  updateCurrentPlaying,\n  updateError,\n  radioBaseUrlUpdateSuccess\n} = radioSlice.actions;\nexport default radioSlice.reducer;","map":{"version":3,"names":["createSlice","radioSlice","name","initialState","audio","trackName","baseUrl","converPic","uuid","genres","currentplayingUrl","tag","color","pending","error","reducers","updateStart","state","radioBaseUrlUpdateSuccess","action","payload","updateCurrentPlaying","coverPic","radioUpdateGenreSuccess","updateError","actions","reducer"],"sources":["/home/pwn0x80/Documents/projects/radio/src/redux/radioSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const radioSlice = createSlice({\n  name: \"currentRadioUrl\",\n  initialState: {\n    audio: {\n      name: null,\n      trackName: null,\n      baseUrl: \"\",\n      converPic: \"\",\n      uuid: null,\n      genres: null,\n      currentplayingUrl: null,\n      tag: \"\",\n      color: \"\",\n    },\n    pending: false,\n    error: false,\n\n\n  },\n\n  reducers: {\n    updateStart: (state) => {\n      state.pending = true;\n    },\n    radioBaseUrlUpdateSuccess: (state, action) => {\n      state.pending = false;\n      state.audio.baseUrl = action.payload?.baseUrl;\n    },\n    updateCurrentPlaying: (state, action) => {\n      state.pending = false;\n      state.audio.trackName = action.payload.trackName;\n      state.audio.converPic = action.payload.coverPic;\n      state.audio.uuid = action.payload.uuid;\n      state.audio.currentplayingUrl = action.payload.currentplayingUrl;\n      state.audio.color = action.payload.color;\n    },\n    radioUpdateGenreSuccess: (state, action) => {\n      state.audio.name = action.payload.name;\n      state.audio.trackName = action.payload.trackName;\n      state.pending = false;\n      state.audio.genres = action.payload.genres;\n    },\n    updateError: (state) => {\n      state.error = true;\n      state.pending = false;\n    }\n  }\n});\nexport const {\n  updateStart,\n  radioUpdateGenreSuccess,\n  updateCurrentPlaying,\n  updateError,\n  radioBaseUrlUpdateSuccess\n} = radioSlice.actions;\nexport default radioSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,iBAAiB;EACvBC,YAAY,EAAE;IACZC,KAAK,EAAE;MACLF,IAAI,EAAE,IAAI;MACVG,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,iBAAiB,EAAE,IAAI;MACvBC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE;IACT,CAAC;IACDC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EAGT,CAAC;EAEDC,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtBA,KAAK,CAACJ,OAAO,GAAG,IAAI;IACtB,CAAC;IACDK,yBAAyB,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAAA;MAC5CF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACb,KAAK,CAACE,OAAO,sBAAGa,MAAM,CAACC,OAAO,oDAAd,gBAAgBd,OAAO;IAC/C,CAAC;IACDe,oBAAoB,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACb,KAAK,CAACC,SAAS,GAAGc,MAAM,CAACC,OAAO,CAACf,SAAS;MAChDY,KAAK,CAACb,KAAK,CAACG,SAAS,GAAGY,MAAM,CAACC,OAAO,CAACE,QAAQ;MAC/CL,KAAK,CAACb,KAAK,CAACI,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MACtCS,KAAK,CAACb,KAAK,CAACM,iBAAiB,GAAGS,MAAM,CAACC,OAAO,CAACV,iBAAiB;MAChEO,KAAK,CAACb,KAAK,CAACQ,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK;IAC1C,CAAC;IACDW,uBAAuB,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC1CF,KAAK,CAACb,KAAK,CAACF,IAAI,GAAGiB,MAAM,CAACC,OAAO,CAAClB,IAAI;MACtCe,KAAK,CAACb,KAAK,CAACC,SAAS,GAAGc,MAAM,CAACC,OAAO,CAACf,SAAS;MAChDY,KAAK,CAACJ,OAAO,GAAG,KAAK;MACrBI,KAAK,CAACb,KAAK,CAACK,MAAM,GAAGU,MAAM,CAACC,OAAO,CAACX,MAAM;IAC5C,CAAC;IACDe,WAAW,EAAGP,KAAK,IAAK;MACtBA,KAAK,CAACH,KAAK,GAAG,IAAI;MAClBG,KAAK,CAACJ,OAAO,GAAG,KAAK;IACvB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EACXG,WAAW;EACXO,uBAAuB;EACvBF,oBAAoB;EACpBG,WAAW;EACXN;AACF,CAAC,GAAGjB,UAAU,CAACwB,OAAO;AACtB,eAAexB,UAAU,CAACyB,OAAO"},"metadata":{},"sourceType":"module"}