{"ast":null,"code":"import { updateStart, radioBaseUrlUpdateSuccess, updateCurrentPlaying, radioUpdateGenreSuccess, updateError } from \"./radioSlice\";\nlet urlUpdate = dispatch => {\n  try {\n    fetch('https://radio-api34.herokuapp.com/baseurl').then(async baseUrl => {\n      return await baseUrl.text();\n    }).then(baseUrl => {\n      dispatch(radioBaseUrlUpdateSuccess({\n        baseUrl: baseUrl\n      }));\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch(updateError());\n  }\n};\nexport default urlUpdate;","map":{"version":3,"names":["updateStart","radioBaseUrlUpdateSuccess","updateCurrentPlaying","radioUpdateGenreSuccess","updateError","urlUpdate","dispatch","fetch","then","baseUrl","text","err","console","error"],"sources":["/home/pwn0x80/Documents/projects/radio/src/redux/urlUpdate.js"],"sourcesContent":["import {\n  updateStart,\n  radioBaseUrlUpdateSuccess,\n  updateCurrentPlaying,\n  radioUpdateGenreSuccess,\n  updateError\n} from \"./radioSlice\";\n\nlet urlUpdate = (dispatch) => {\n  try {\n    fetch('https://radio-api34.herokuapp.com/baseurl').then(async (baseUrl) => {\n      return await baseUrl.text()\n    }).then((baseUrl) => {\n      dispatch(radioBaseUrlUpdateSuccess({ baseUrl: baseUrl }))\n    })\n  } catch (err) {\n    console.error(err)\n    dispatch(updateError())\n  }\n}\nexport default urlUpdate;\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,yBAAyB,EACzBC,oBAAoB,EACpBC,uBAAuB,EACvBC,WAAW,QACN,cAAc;AAErB,IAAIC,SAAS,GAAIC,QAAQ,IAAK;EAC5B,IAAI;IACFC,KAAK,CAAC,2CAA2C,CAAC,CAACC,IAAI,CAAC,MAAOC,OAAO,IAAK;MACzE,OAAO,MAAMA,OAAO,CAACC,IAAI,EAAE;IAC7B,CAAC,CAAC,CAACF,IAAI,CAAEC,OAAO,IAAK;MACnBH,QAAQ,CAACL,yBAAyB,CAAC;QAAEQ,OAAO,EAAEA;MAAQ,CAAC,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IAClBL,QAAQ,CAACF,WAAW,EAAE,CAAC;EACzB;AACF,CAAC;AACD,eAAeC,SAAS"},"metadata":{},"sourceType":"module"}