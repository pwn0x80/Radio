{"ast":null,"code":"var _jsxFileName = \"/home/pwn0x80/Documents/projects/radio/src/components/controller/Controller.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport mode from \"../../services/indexedDB\";\nimport useController from \"../../utils/useAudioController\";\nimport { PlaybtnSvg, NextBtnSvg, PrevBtnSvg, AddbookmarkSvg, Controls, ControlsBtn, MarkControlsBtnright, UnMarkControlsBtnright, VolumeSvg, VolumeWrapper, StatusSpace } from \"./Controller.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Controller = () => {\n  _s();\n  const name = useSelector(state => state.radio.audio.name);\n  const trackName = useSelector(state => state.radio.audio.trackName);\n  const baseUrl = useSelector(state => state.radio.audio.baseUrl);\n  const coverPic = useSelector(state => state.radio.audio.converPic);\n  const currentplayingUrl = useSelector(state => state.radio.audio.currentplayingUrl);\n  const tag = useSelector(state => state.radio.audio.tag);\n  const color = useSelector(state => state.radio.audio.color);\n  const [bookmark, setBookmark] = useState(true);\n  const uuid = useSelector(state => state.radio.audio.uuid);\n  const {\n    playTrigger,\n    playBtn,\n    prevTrigger,\n    nextTrigger,\n    volumeMuteTrigger,\n    volume\n  } = useController();\n  useEffect(() => {\n    //indexedDB view is data available\n    if (uuid == undefined) return;\n    mode().then(store => {\n      store.dataViewdb(uuid).onsuccess = event => {\n        event.target.result === undefined ? setBookmark(true) : setBookmark(false);\n      };\n    });\n  }, [trackName]);\n  let putData = () => {\n    return {\n      id: uuid.toString(),\n      trackName: trackName.toString(),\n      baseUrl: baseUrl,\n      coverPic: coverPic,\n      currentplayingUrl: currentplayingUrl,\n      tag: tag,\n      color: color,\n      uuid: uuid\n    };\n  };\n  let addDB = store => {\n    mode().then(store => {\n      store.dataPutdb(putData());\n    });\n    setBookmark(false);\n  };\n  let removeDB = async () => {\n    mode().then(store => {\n      store.dataDeletedb(uuid);\n    });\n    setBookmark(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(VolumeWrapper, {\n        onClick: volumeMuteTrigger,\n        children: /*#__PURE__*/_jsxDEV(VolumeSvg, {\n          mutevolume: volume ? 1 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlsBtn, {\n        children: /*#__PURE__*/_jsxDEV(PrevBtnSvg, {\n          onClick: prevTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlsBtn, {\n        children: /*#__PURE__*/_jsxDEV(PlaybtnSvg, {\n          playbtnstate: playBtn ? 1 : 0,\n          onClick: playTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlsBtn, {\n        onClick: nextTrigger,\n        children: /*#__PURE__*/_jsxDEV(NextBtnSvg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), bookmark ? /*#__PURE__*/_jsxDEV(MarkControlsBtnright, {\n        onClick: addDB,\n        children: /*#__PURE__*/_jsxDEV(AddbookmarkSvg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(UnMarkControlsBtnright, {\n        onClick: removeDB,\n        children: /*#__PURE__*/_jsxDEV(AddbookmarkSvg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Controller, \"JZNAZ62sGeEKcTVwpaBKkBwaY0o=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useController];\n});\n_c = Controller;\nexport default Controller;\nvar _c;\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["useEffect","useReducer","useState","useSelector","mode","useController","PlaybtnSvg","NextBtnSvg","PrevBtnSvg","AddbookmarkSvg","Controls","ControlsBtn","MarkControlsBtnright","UnMarkControlsBtnright","VolumeSvg","VolumeWrapper","StatusSpace","Controller","name","state","radio","audio","trackName","baseUrl","coverPic","converPic","currentplayingUrl","tag","color","bookmark","setBookmark","uuid","playTrigger","playBtn","prevTrigger","nextTrigger","volumeMuteTrigger","volume","undefined","then","store","dataViewdb","onsuccess","event","target","result","putData","id","toString","addDB","dataPutdb","removeDB","dataDeletedb"],"sources":["/home/pwn0x80/Documents/projects/radio/src/components/controller/Controller.jsx"],"sourcesContent":["import { useEffect, useReducer, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport mode from \"../../services/indexedDB\"\nimport useController from \"../../utils/useAudioController\"\nimport {\n  PlaybtnSvg,\n  NextBtnSvg,\n  PrevBtnSvg,\n  AddbookmarkSvg,\n  Controls,\n  ControlsBtn,\n  MarkControlsBtnright,\n  UnMarkControlsBtnright,\n  VolumeSvg,\n  VolumeWrapper,\n  StatusSpace\n\n} from \"./Controller.styles\"\n\n\n\nconst Controller = () => {\n\n  const name = useSelector(state => state.radio.audio.name)\n  const trackName = useSelector(state => state.radio.audio.trackName)\n  const baseUrl = useSelector(state => state.radio.audio.baseUrl)\n  const coverPic = useSelector(state => state.radio.audio.converPic)\n  const currentplayingUrl = useSelector(state => state.radio.audio.currentplayingUrl)\n  const tag = useSelector(state => state.radio.audio.tag)\n  const color = useSelector(state => state.radio.audio.color)\n  const [bookmark, setBookmark] = useState(true)\n  const uuid = useSelector(state => state.radio.audio.uuid)\n  const { playTrigger, playBtn, prevTrigger, nextTrigger, volumeMuteTrigger, volume } = useController()\n\n  useEffect(() => {\n    //indexedDB view is data available\n    if (uuid == undefined) return\n    mode().then((store) => {\n      store.dataViewdb(uuid).onsuccess = (event) => {\n        event.target.result === undefined ? setBookmark(true) : setBookmark(false)\n      }\n    })\n  }, [trackName])\n  let putData = () => {\n    return {\n      id: uuid.toString(),\n      trackName: trackName.toString(),\n      baseUrl: baseUrl,\n      coverPic: coverPic,\n      currentplayingUrl: currentplayingUrl,\n      tag: tag,\n      color: color,\n      uuid: uuid\n    }\n  }\n  let addDB = (store) => {\n    mode().then((store) => {\n      store.dataPutdb(putData())\n    })\n    setBookmark(false)\n  }\n  let removeDB = async () => {\n    mode().then((store) => {\n      store.dataDeletedb(uuid);\n    })\n    setBookmark(true)\n  }\n  return (\n    <>\n      <Controls>\n        <VolumeWrapper onClick={volumeMuteTrigger} >\n          <VolumeSvg mutevolume={volume ? 1 : 0} />\n        </VolumeWrapper>\n\n        <ControlsBtn>\n          <PrevBtnSvg onClick={prevTrigger}>\n          </PrevBtnSvg>\n        </ControlsBtn>\n\n        <ControlsBtn>\n\n          <PlaybtnSvg playbtnstate={playBtn ? 1 : 0} onClick={playTrigger} >\n          </PlaybtnSvg>\n\n        </ControlsBtn>\n\n        <ControlsBtn onClick={nextTrigger}>\n          <NextBtnSvg>\n          </NextBtnSvg>\n        </ControlsBtn>\n\n        {\n          bookmark ?\n            < MarkControlsBtnright onClick={addDB}\n            >\n              <AddbookmarkSvg />\n\n            </MarkControlsBtnright>\n            :\n            < UnMarkControlsBtnright onClick={removeDB}\n            >\n              <AddbookmarkSvg />\n\n            </UnMarkControlsBtnright>}\n      </Controls>\n    </>\n  )\n}\n\n\nexport default Controller\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}