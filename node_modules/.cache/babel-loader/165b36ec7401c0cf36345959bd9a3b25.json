{"ast":null,"code":"var _s = $RefreshSig$();\nconst initAudio = {\n  success: false,\n  pending: false,\n  error: false\n};\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"start\":\n      console.log(\"start\");\n      return {\n        success: false,\n        pending: true,\n        error: false\n      };\n    case \"success\":\n      console.log('sucess');\n      return {\n        success: true,\n        pending: false,\n        error: false\n      };\n    case \"fail\":\n      console.log(\"fail\");\n      return {\n        success: false,\n        pending: false,\n        error: true\n      };\n  }\n};\nfunction startPlayback(handleStart) {\n  handleStart();\n  return document.getElementById('player').play();\n}\nexport let useController = () => {\n  _s();\n  const [currentAudioStatus, dispatch] = useReducer(reducer, initAudio);\n  const [volume, setVolume] = useState(false);\n  const handleStart = () => {\n    dispatch({\n      type: \"start\"\n    });\n  };\n  const handlesuccess = () => {\n    dispatch({\n      type: \"success\"\n    });\n  };\n  const handleError = () => {\n    dispatch({\n      type: \"fail\"\n    });\n  };\n  const uuid = useSelector(state => state.radio.audio.uuid);\n  const trackName = useSelector(state => state.radio.audio.trackName);\n  const [playBtn, setPlayBtn] = useState(false);\n  useEffect(() => {\n    if (trackName == undefined) return;\n    startPlayback(handleStart).then(() => {\n      handlesuccess();\n      setPlayBtn(true);\n      console.log(\"play\");\n    }).catch(() => {\n      handleError();\n      console.log(\"error\");\n    });\n  }, [trackName]);\n  let playTrigger = e => {\n    if (trackName == undefined) {\n      alert(\"plz select song first\");\n      return;\n    }\n    console.log(\"cl\");\n    let t = document.getElementById('player');\n    //  play\n    if (t.currentTime > 0 && !t.paused && !t.ended) {\n      t.pause();\n      setPlayBtn(false);\n    } else {\n      setPlayBtn(true);\n      t.play().then().catch(e => {\n        console.error(e);\n      });\n    }\n  };\n  let prevTrigger = e => {\n    let currentDataId = document.querySelector(`div[data-id='${uuid}']`);\n    currentDataId.previousSibling.click();\n  };\n  let nextTrigger = e => {\n    let currentDataId = document.querySelector(`div[data-id='${uuid}']`);\n    currentDataId.nextSibling.click();\n  };\n  let volumeMuteTrigger = () => {\n    let muteBtn = document.getElementById('player');\n    if (muteBtn.muted) {\n      //pause true\n      muteBtn.muted = false;\n      setVolume(false);\n    } else {\n      muteBtn.muted = true;\n      setVolume(true);\n    }\n  };\n  return {\n    volume,\n    volumeMuteTrigger,\n    playTrigger,\n    playBtn,\n    prevTrigger,\n    nextTrigger,\n    currentAudioStatus\n  };\n};\n_s(useController, \"04lRCEKMaigORCj58HaZNwdiQn4=\", true);\nexport default useController;","map":{"version":3,"names":["initAudio","success","pending","error","reducer","state","action","console","log","type","startPlayback","handleStart","document","getElementById","play","useController","currentAudioStatus","dispatch","useReducer","volume","setVolume","useState","handlesuccess","handleError","uuid","useSelector","radio","audio","trackName","playBtn","setPlayBtn","useEffect","undefined","then","catch","playTrigger","e","alert","t","currentTime","paused","ended","pause","prevTrigger","currentDataId","querySelector","previousSibling","click","nextTrigger","nextSibling","volumeMuteTrigger","muteBtn","muted"],"sources":["/home/pwn0x80/Documents/projects/radio/src/utils/useAudioController.jsx"],"sourcesContent":["const initAudio =\n{\n  success: false,\n  pending: false,\n  error: false,\n}\n\n\nconst reducer = (state, action) => {\n  console.log(action)\n  switch (action.type) {\n    case \"start\":\n      console.log(\"start\")\n      return { success: false, pending: true, error: false }\n    case \"success\":\n      console.log('sucess')\n      return { success: true, pending: false, error: false }\n    case \"fail\":\n      console.log(\"fail\")\n      return { success: false, pending: false, error: true }\n  }\n}\n\n\nfunction startPlayback(handleStart) {\n  handleStart()\n  return document.getElementById('player').play()\n}\n\n\nexport let useController = () => {\n  const [currentAudioStatus, dispatch] = useReducer(reducer, initAudio);\n  const [volume, setVolume] = useState(false)\n  const handleStart = () => {\n    dispatch({ type: \"start\" });\n  };\n  const handlesuccess = () => {\n    dispatch({ type: \"success\" });\n  };\n  const handleError = () => {\n    dispatch({ type: \"fail\" });\n  };\n\n  const uuid = useSelector(state => state.radio.audio.uuid)\n  const trackName = useSelector(state => state.radio.audio.trackName)\n  const [playBtn, setPlayBtn] = useState(false)\n  useEffect(() => {\n    if (trackName == undefined) return\n    startPlayback(handleStart).then(() => {\n      handlesuccess()\n      setPlayBtn(true)\n      console.log(\"play\")\n    }).catch(() => {\n      handleError()\n      console.log(\"error\")\n    })\n  }, [trackName])\n\n  let playTrigger = (e) => {\n    if (trackName == undefined) { alert(\"plz select song first\"); return }\n    console.log(\"cl\")\n    let t = document.getElementById('player')\n    //  play\n    if (t.currentTime > 0 && !t.paused && !t.ended) {\n      t.pause()\n      setPlayBtn(false)\n    } else {\n      setPlayBtn(true);\n      t.play().then(\n      ).catch((e) => {\n        console.error(e)\n      })\n    }\n  }\n  let prevTrigger = (e) => {\n    let currentDataId = document.querySelector(`div[data-id='${uuid}']`)\n    currentDataId.previousSibling.click()\n  }\n  let nextTrigger = (e) => {\n    let currentDataId = document.querySelector(`div[data-id='${uuid}']`)\n    currentDataId.nextSibling.click()\n  }\n  let volumeMuteTrigger = () => {\n    let muteBtn = document.getElementById('player')\n    if (muteBtn.muted) {\n      //pause true\n      muteBtn.muted = false\n      setVolume(false)\n    } else {\n      muteBtn.muted = true\n      setVolume(true)\n    }\n  }\n  return { volume, volumeMuteTrigger, playTrigger, playBtn, prevTrigger, nextTrigger, currentAudioStatus }\n}\n\nexport default useController;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}