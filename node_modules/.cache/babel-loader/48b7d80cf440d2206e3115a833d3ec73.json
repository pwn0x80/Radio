{"ast":null,"code":"var _jsxFileName = \"/home/pwn0x80/Documents/projects/radio/src/components/contentBox/ContentBox.jsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { useCallback, useEffect, useInsertionEffect, useRef, useState } from \"react\";\nimport { MainWrapper, MainContentOption, MainContentWrapper } from \"./ContentBox.styles.jsx\";\nimport { updateCurrentPlaying } from \"../../redux/radioSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInfiniteScroller } from '@pwn0x80/react-infinite-scroller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentBox = () => {\n  _s();\n  const [radioTrack, setRadioTrack] = useState([]);\n  const [offsetState, setoffsetState] = useState(0);\n  const genresSelect = useSelector(state => state.radio.audio.genres);\n  const baseUrl = useSelector(state => state.radio.audio.baseUrl);\n  const currentPlayUrl = useSelector(state => state.radio.audio.currentplayingUrl);\n  let dispatch = new useDispatch();\n  // let observerRef = useRef();\n  // const callbackRef = useCallback((node => {\n  //   if (observerRef.current) observerRef.current.disconnect()\n  //   observerRef.current = new IntersectionObserver(entries => {\n  //     if (entries[0].isIntersecting) {\n  //       setoffsetState(e => e + 10);\n  //     }\n  //   })\n  //   if (node) observerRef.current.observe(node)\n  // }), [])\n  const {\n    callbackRef,\n    scrollFetch,\n    setScrollFetch,\n    InfiniteScroll\n  } = useInfiniteScroller();\n  useEffect(() => {\n    setoffsetState(e => e + 20);\n    console.log(\"insde useEffect\");\n  }, [scrollFetch]);\n  useEffect(() => {\n    setoffsetState(0);\n    setRadioTrack([]);\n  }, [genresSelect]);\n  useEffect(() => {\n    if (genresSelect == null) return;\n    try {\n      (async () => {\n        let genresSelectfilter = genresSelect.replace('#', '');\n        let limit = 15;\n        let url = baseUrl + \"/json/stations/byname/\" + genresSelectfilter + `?limit=${limit}&offset=${offsetState}`;\n        let data = await fetch(url);\n        let radioList = await data.json();\n        setRadioTrack(e => [...e, ...radioList]);\n      })();\n    } catch {\n      console.log(\"sommething went wrong\");\n    }\n  }, [scrollFetch, offsetState]);\n  let trackTrigger = detail => function () {\n    //todo error check \n    dispatch(updateCurrentPlaying({\n      coverPic: detail.favicon,\n      trackName: detail.name,\n      currentplayingUrl: detail.url_resolved,\n      uuid: detail.stationuuid\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(MainWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '300px',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContentWrapper, {\n        children: radioTrack.length == 0 ? \"loading...\" : radioTrack.map((e, keys) => {\n          // if (radioTrack.length - 2 == keys) {\n          //   return (\n          //     <MainContentOption key={keys} data-id={`${e?.stationsuuid}`} ref={callbackRef} onClick={trackTrigger(e)} >{e?.name}</MainContentOption>\n          //   )\n          // }\n          return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n            len: radioTrack.length,\n            children: /*#__PURE__*/_jsxDEV(MainContentOption, {\n              \"data-id\": `${e === null || e === void 0 ? void 0 : e.stationuuid}`,\n              onClick: trackTrigger(e),\n              children: e === null || e === void 0 ? void 0 : e.name\n            }, keys, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentBox, \"RKlG9NZbHbi/Lut9hJ27ruXgL3Q=\", false, function () {\n  return [useSelector, useSelector, useSelector, useInfiniteScroller];\n});\n_c = ContentBox;\nexport default ContentBox;\nvar _c;\n$RefreshReg$(_c, \"ContentBox\");","map":{"version":3,"names":["styled","useCallback","useEffect","useInsertionEffect","useRef","useState","MainWrapper","MainContentOption","MainContentWrapper","updateCurrentPlaying","useDispatch","useSelector","useInfiniteScroller","ContentBox","radioTrack","setRadioTrack","offsetState","setoffsetState","genresSelect","state","radio","audio","genres","baseUrl","currentPlayUrl","currentplayingUrl","dispatch","callbackRef","scrollFetch","setScrollFetch","InfiniteScroll","e","console","log","genresSelectfilter","replace","limit","url","data","fetch","radioList","json","trackTrigger","detail","coverPic","favicon","trackName","name","url_resolved","uuid","stationuuid","height","overflowY","length","map","keys"],"sources":["/home/pwn0x80/Documents/projects/radio/src/components/contentBox/ContentBox.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useCallback, useEffect, useInsertionEffect, useRef, useState } from \"react\";\nimport { MainWrapper, MainContentOption, MainContentWrapper } from \"./ContentBox.styles.jsx\"\nimport { updateCurrentPlaying } from \"../../redux/radioSlice\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useInfiniteScroller } from '@pwn0x80/react-infinite-scroller';\nconst ContentBox = () => {\n  const [radioTrack, setRadioTrack] = useState([])\n  const [offsetState, setoffsetState] = useState(0);\n  const genresSelect = useSelector(state => state.radio.audio.genres)\n\n  const baseUrl = useSelector(state => state.radio.audio.baseUrl);\n  const currentPlayUrl = useSelector(state => state.radio.audio.currentplayingUrl);\n  let dispatch = new useDispatch();\n  // let observerRef = useRef();\n  // const callbackRef = useCallback((node => {\n  //   if (observerRef.current) observerRef.current.disconnect()\n  //   observerRef.current = new IntersectionObserver(entries => {\n  //     if (entries[0].isIntersecting) {\n  //       setoffsetState(e => e + 10);\n  //     }\n  //   })\n  //   if (node) observerRef.current.observe(node)\n  // }), [])\n  const { callbackRef, scrollFetch, setScrollFetch, InfiniteScroll } = useInfiniteScroller()\n  useEffect(() => {\n    setoffsetState(e => e + 20);\n    console.log(\"insde useEffect\")\n  }, [scrollFetch])\n  useEffect(() => {\n    setoffsetState(0)\n    setRadioTrack([])\n  }, [genresSelect])\n\n  useEffect(() => {\n    if (genresSelect == null) return\n\n    try {\n      (async () => {\n        let genresSelectfilter = genresSelect.replace('#', '')\n        let limit = 15\n        let url = baseUrl + \"/json/stations/byname/\" + genresSelectfilter + `?limit=${limit}&offset=${offsetState}`\n        let data = await fetch(url)\n        let radioList = await data.json()\n        setRadioTrack(e => [...e, ...radioList]);\n      })()\n    } catch {\n      console.log(\"sommething went wrong\")\n    }\n  }, [scrollFetch, offsetState])\n  let trackTrigger = detail => (...ev) => {\n    //todo error check \n    dispatch(updateCurrentPlaying(\n      {\n        coverPic: detail.favicon,\n        trackName: detail.name,\n        currentplayingUrl: detail.url_resolved,\n        uuid: detail.stationuuid,\n      }\n    ));\n  }\n\n  return (\n    <MainWrapper>\n      <div style={{\n        height: '300px', overflowY: 'auto'\n      }}>\n        <MainContentWrapper>\n          {radioTrack.length == 0 ? \"loading...\" :\n            radioTrack.map((e, keys) => {\n              // if (radioTrack.length - 2 == keys) {\n              //   return (\n              //     <MainContentOption key={keys} data-id={`${e?.stationsuuid}`} ref={callbackRef} onClick={trackTrigger(e)} >{e?.name}</MainContentOption>\n              //   )\n              // }\n              return (\n                <InfiniteScroll len={radioTrack.length} >\n                  <MainContentOption data-id={`${e?.stationuuid}`} key={keys} onClick={trackTrigger(e)} >{e?.name}</MainContentOption>\n                </InfiniteScroll>\n              )\n\n            })\n          }\n\n\n        </MainContentWrapper>\n      </div>\n\n    </MainWrapper>\n  )\n}\n\nexport default ContentBox\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}